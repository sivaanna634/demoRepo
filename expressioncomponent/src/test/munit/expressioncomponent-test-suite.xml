<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:mock="http://www.mulesoft.org/schema/mule/mock" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:spring="http://www.springframework.org/schema/beans"
	xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd">
	<munit:config name="munit" doc:name="MUnit configuration" />
	<spring:beans>
		<spring:import resource="classpath:expressioncomponent.xml" />
	</spring:beans>
	<munit:test name="TypehalfexpressioncomponentFlowTest"
		description="Test">
		<munit:set payload="#[]" doc:name="Set Message">
			<munit:inbound-properties>
				<munit:inbound-property key="http.query.params"
					value="#[['radius': '10','type':'half']]" />
			</munit:inbound-properties>
		</munit:set>
		<flow-ref name="expressioncomponentFlow" doc:name="Flow-ref to expressioncomponentFlow" />
		<munit:assert-on-equals message="Incorrect message recieved"
			expectedValue="Area for type half circle is 157.0" actualValue="#[payload]"
			doc:name="Assert Equals" />
	</munit:test>
	<munit:test name="TypefullexpressioncomponentFlowTest"
		description="MUnit Test">
		<munit:set payload="#[]" doc:name="Set Message">
			<munit:inbound-properties>
				<munit:inbound-property key="http.query.params"
					value="#[['radius': '10','type':'full']]" />
			</munit:inbound-properties>
		</munit:set>
		<flow-ref name="expressioncomponentFlow" doc:name="Flow-ref to expressioncomponentFlow" />
		<munit:assert-on-equals message="Incorrect message recieved"
			expectedValue="Area for type full circle is 314.0" actualValue="#[payload]"
			doc:name="Assert Equals" />
	</munit:test>
	<munit:test name="TypequadraexpressioncomponentFlowTest"
		description="MUnit Test">
		<munit:set payload="#[]" doc:name="Set Message">
			<munit:inbound-properties>
				<munit:inbound-property key="http.query.params"
					value="#[['radius': '10','type':'quadra']]" />
			</munit:inbound-properties>
		</munit:set>
		<flow-ref name="expressioncomponentFlow" doc:name="Flow-ref to expressioncomponentFlow" />
		<munit:assert-on-equals message="Incorrect message recieved"
			expectedValue="Area for type quadra circle is 78.5" actualValue="#[payload]"
			doc:name="Assert Equals" />
	</munit:test>
	<munit:test name="TypedefaultexpressioncomponentFlowTest"
		description="MUnit Test">
		<munit:set payload="#[]" doc:name="Set Message">
			<munit:inbound-properties>
				<munit:inbound-property key="http.query.params"
					value="#[['radius': '10','type':'abc']]" />
			</munit:inbound-properties>
		</munit:set>
		<flow-ref name="expressioncomponentFlow" doc:name="Flow-ref to expressioncomponentFlow" />
		<munit:assert-on-equals message="Incorrect message recieved"
			expectedValue="Area for type abc circle is 235.5" actualValue="#[payload]"
			doc:name="Assert Equals" />
	</munit:test>
	<munit:test name="expressioncomponent-exceptionTest"
		description="MUnit Test">
		<flow-ref name="expressioncomponentFlow" doc:name="Flow-ref to expressioncomponentFlow" />
	</munit:test>
	<munit:test name="expressioncomponent-test-defaultExceptionTest"
		description="MUnit Test">
		<mock:throw-an
			exception-ref="#[new java.lang.Exception(&quot;Test Exception for mUnit Test.&quot;)]"
			whenCalling=".*:.*" doc:name="Throw an Exception">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Variable']"/>
            </mock:with-attributes>
		</mock:throw-an>
        <munit:set payload="#[]" doc:name="Set Message">
			<munit:inbound-properties>
				<munit:inbound-property key="http.query.params"
					value="#[['radius': '10','type':'abc']]" />
			</munit:inbound-properties>
		</munit:set>
		<flow-ref name="expressioncomponentFlow" doc:name="Flow-ref to expressioncomponentFlow" />
	</munit:test>

</mule>
